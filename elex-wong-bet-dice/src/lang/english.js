module.exports = {
    title: 'CrazyDice',
    lang: {
        english: 'English',
        chinese: '中文',
        japanese: '日本語',
        korean: '한국어',
        spanish: 'Español',
        french: 'Français',
        german: 'Deutsch',
    },
    games: {
        'dice': 'Dice',
        'slot': 'Slot'
    },
    game_rule:'Game Rules',
    login: 'Connect',
    login1: 'Connect Wallet',
    chats: 'Chat',
    bet: 'Bet',
    bets: 'Bets',
    referral: 'Referral',
    slotGame: 'SlotGame',
    dividend: 'Dividend',
    risky: 'Risky',
    settings: 'Settings',
    sounds: 'Sounds',
    animation: 'Animation',
    maxBet: 'Max Bet',
    manual: 'Manual',
    auto: 'Auto',
    liveStats: 'Live Stats',
    wagered: 'Wagered',
    profit: 'Profit',
    wins: 'Wins',
    losses: 'Losses',
    rulesTitle:'How to play CrazyDice?',
    rules1:' Login by linking your Solana wallet;',
    rules2:'Place the amount you want to bet and choose between payout that you want or chance of winning. When you do that, you will see under/over which number you need to roll in order to win a bet.',
    betsAmount: 'Bets Amount',
    balance: 'Balance',
    numberOfBets: 'Number of Bets',
    rollOver: 'Roll Over',
    rollUnder: 'Roll Under',
    multiplier: 'Multiplier',
    winChance: 'Win Chance',
    stopOnProfit: 'Stop on Profit',
    stopOnLoss: 'Stop on Loss',
    startAutobet: 'Start Autobet',
    stopAutoBet: 'Stop Autobet',
    profitOnWin: 'Profit on Win',
    rollDice: 'Roll Dice',
    max: 'Max',
    selectStrategy: 'Select Strategy',
    chooseStrategy: 'Please choose strategy',
    createStrategy: 'Create Strategy',
    conditions: 'Conditions',
    editStrategy: 'Edit Strategy',
    deleteStrategy: 'Delete Strategy',
    advancedStrategy: 'Advanced Strategy',
    strategyName: 'Name',
    condition: 'Condition',
    on: 'On',
    do: 'Do',
    addConditonBlock:'Add Condition Block',
    conditionTip:'Conditions will be executed in a top down order',
    allBets: 'All Bets',
    myBets: 'My Bets',
    betID: 'Bet ID',
    result: 'Result',
    payout: 'Payout',
    theDividend: 'The Dividend',
    runningPool: 'Running Pool',
    period: 'Period',
    frozenToken: 'Frozen Token',
    myToken: 'My Token',
    frozen: 'Frozen',
    freeze: 'Freeze',
    release: 'Release',
    yesterday: 'Yesterday',
    dividendCollected: 'Dividend Collected',
    totalFrozen: 'Total Frozen',
    claim: 'Claim',
    LCD: 'LCD',
    SOL: 'SOL',
    myDividend: 'My Dividend',
    earn: 'Earn',
    fromRefBets: 'From Ref’s Bets',
    fromRefMining: 'From Ref’s Mining',
    myReferrals: 'My Referrals',
    count: 'Count',
    profitFromRefBets: 'Profit From Ref Bets',
    withdraw: 'Withdraw',
    yourReferralLink: 'Your referral link',
    getReferralLink: 'Get referral link',
    riskSupply: 'RISK Supply',
    riskPrice: 'RISK Price',
    risk: 'RISK',
    totalDeposit: 'Total Deposit ',
    totalWithdraw: 'Total Withdraw ',
    totalincome: 'Total Income ',
    totalOutlay: 'Total Outlay ',
    yourRisky: 'Your Risk',
    buyRisk: 'Buy RISK',
    withdrawRisk: 'Withdraw RISK',
    closeRisky: 'Close Risk',
    riskRule: 'How to play',
    riskRule1: 'The price of RISK defaults to 1 RISK = 1SOL (1 RISK = the amount of SOL in the Risk fund pool / the amount of RISK).',
    riskRule2: 'Players participate in RISK Farmer by purchasing RISK, and share profits and risks with RISK Farmer.',
    riskRule3: '99.9% of the bet amount will be invested in the RISK Farmer fund pool, and the amount won by the player is also spent from the risk fund pool.',
    riskRule4: 'When players withdraw RISK, they will be converted to SOL based on the current RISK price, and RISK Farmer will charge a processing fee of 1‰.',
    buy: 'Buy',
    close: 'X',
    insufficientBalance: 'Insufficient wallet balance',
    loadMore: 'Load More',
    highRoll: 'High Rollers',
    payer: 'User',
    rank: 'Today\'s ranking',
    liveBet: 'Recent Bets',
    more: 'More >>',
    twosameicon:'Two same icon',
    noofbets:'Number of Bets',
    dividendrule:'Bet to get LCD rebate(share the dividend)',
    dividendruleA1:'Exchange',
    dividendruleA2:'Before exchange to SOL, players have to freeze the LCD. After freeze, players can claim SOL after 12:00 AM (UTC+0)',
    dividendruleB1:'Amount',
    dividendruleB2:'Players can get LCD amount * 100%',
    dividendruleB3:'Website can get LCD amount * 10%',
    dividendruleB4:'Inviter can get LCD amount * 4',
    dividendruleC1:'Price',
    dividendruleC2:'SOL : betting token, 1 SOL = 1,000,000,000 Lamports',
    dividendruleC3:'LCD price : LCD current price+ ((the last day total bet) Lamports * 100,000 / 5)',
    createAccount: 'Create account',
    updateAccount: 'Update account',
    loginWallet: 'Please login to the wallet first',
    createBetAccount: 'Need to create a betting account first',
    createAccountOkBeginBet: 'The account is created successfully, start betting',
    noTokenAccountNotWithdraw: 'The {1} token account held under the wallet {0} was not found and cannot be transferred',
    signTransactionError: 'Transaction signature failed',
    transactionFailed: 'Transaction {0} failed ({1})',
    referralTips: {
        tip1: 'Need to create a data account to get 0.1% of the player’s bonus per bet amount; <span style="color:#f00;">(Note: To create a data account, Solana needs to mortgage the <a href="https://docs.solana.com/implemented-proposals/rent" target="_blank" style="color:#6192F1; font-weight: bold; text-decoration: underline;">rent {0} SOL</a>)</span>',
        tip2: 'Check the currency types below to create a corresponding bonus Token account, which can get 4% of the bonus generated by the player for each bet; <span style="color:#f00;">(Note: To create each Token account, Solana needs to mortgage the <a href="https://docs.solana.com/implemented-proposals/rent" target="_blank" style="color:#6192F1; font-weight: bold; text-decoration: underline;">rent 0.00203928 SOL</a>)</span>',
    },
    provablyFairs: {
        title: 'Fairness',
        show: 'Provably fair, Can change the seed',
        log: 'View transaction log example',
        doc: 'View document',
        seeds: 'Seeds',
        verify: 'Verify',
        noncePubkey: {
            name: "Solana persistent transaction random number account generated according to your wallet address",
            showRule: 'View generation rules',
            hideRule: 'Hide generation rules',
            log: 'Please check the string after Data::NoncePubkey:: in the transaction log'
        },
        rollNonce: {
            name: 'Random hash generated by calling NoncePubkey',
            log: 'Please check the string after Data::RollNonce:: in the transaction log'
        },
        clientSeed: {
            name: 'Client Seed',
            info1: 'Call Keypair.generate().publicKey to generate random seed',
            info2: 'You can customize this value',
            click: 'Click change',
            log: 'Please check the string after Data::ClientSeed:: in the transaction log',
            change: 'Change',
        },
        rollClock: {
            name: 'Current clock',
            log: 'Please check the JSON string after Data::RollClock:: in the transaction log'
        },
        betData: {
            name: "Data of this bet",
            predict: 'the number selected for this bet',
            payout: 'the payout multiplier of this bet',
            log: 'Please check the JSON string after Data::BetData:: in the transaction log'
        },
        rollTimes: {
            name: 'Random seed, +1 per bet',
            log: 'Please check the number after Data::RollTimes:: in the transaction log'
        },
    },
    language:"Language",
    logout:"Logout",
    gameList:"Game List",
    currentcash:'Current Cash',
    username:'Username',
    register:'Register',
    password:'Password',
    comfirmpwd:'Confirm Password',
    forgetpwd:'Forgot Password',
    confirm:'Confirm',
    amount:'Amount',
    withamount:'Withdraw Amount',
    deposit:'Deposit',
    game:'Games',
    race: 'Races',
    races: {
        you_rank: 'Your ranking',
        you_prize: 'Your bonus',
        sol_price: 'SOL price',
        today: {
            title:'$100 races - 24 hours',
            time: 'Date',
            end: 'End',
            rank: 'Today\'s ranking',
        },
        yesterday: {
            title:'Yesterday\'s races',
            status0: 'Waiting for send',
            status1: 'Has been sent',
            rank: 'Yesterday\'s ranking',
        },
        payer: 'User',
        bets: 'Total bet',
        prize: 'Bonus',
        tips: {
            title: 'The bonus will be automatically issued after 01:00 (UTC time) the next day',
            rules: 'Bonus distribution rules',
            ruleitem: 'No. {0}: {1}%',
            send: 'The bonus will be exchanged for SOL based on the real-time price on coingecko'
        }
    },
    moreWallet: 'More Wallet'
}