///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class JobInfoModelDataResumeForwardingEmails {
/*
{
  "email": "danmar.olayres@clearsourcebpo.com"
} 
*/

  String? email;

  JobInfoModelDataResumeForwardingEmails({
    this.email,
  });
  JobInfoModelDataResumeForwardingEmails.fromJson(Map<String, dynamic> json) {
    email = json["email"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["email"] = email;
    return data;
  }
}

class JobInfoModelDataScreeningQuestions {
/*
{
  "question": "How long is your leadership role experience? "
} 
*/

  String? question;

  JobInfoModelDataScreeningQuestions({
    this.question,
  });
  JobInfoModelDataScreeningQuestions.fromJson(Map<String, dynamic> json) {
    question = json["question"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["question"] = question;
    return data;
  }
}

class JobInfoModelDataBenefits {
/*
{
  "id": 9,
  "name": "Other Allowances"
} 
*/

  int? id;
  String? name;

  JobInfoModelDataBenefits({
    this.id,
    this.name,
  });
  JobInfoModelDataBenefits.fromJson(Map<String, dynamic> json) {
    id = json["id"]?.toInt();
    name = json["name"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["id"] = id;
    data["name"] = name;
    return data;
  }
}

class JobInfoModelDataCategories {
/*
{
  "id": 1,
  "key": "customer-service",
  "value": "Customer Service",
  "is_approve": true,
  "created_at": "2021-07-19T14:30:26.000000Z",
  "updated_at": "2021-07-19T14:30:26.000000Z"
} 
*/

  int? id;
  String? key;
  String? value;
  bool? isApprove;
  String? createdAt;
  String? updatedAt;

  JobInfoModelDataCategories({
    this.id,
    this.key,
    this.value,
    this.isApprove,
    this.createdAt,
    this.updatedAt,
  });
  JobInfoModelDataCategories.fromJson(Map<String, dynamic> json) {
    id = json["id"]?.toInt();
    key = json["key"]?.toString();
    value = json["value"]?.toString();
    isApprove = json["is_approve"];
    createdAt = json["created_at"]?.toString();
    updatedAt = json["updated_at"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["id"] = id;
    data["key"] = key;
    data["value"] = value;
    data["is_approve"] = isApprove;
    data["created_at"] = createdAt;
    data["updated_at"] = updatedAt;
    return data;
  }
}

class JobInfoModelDataSalaryRangeFilters {
/*
{
  "80K_to_100K": "80K - 100K"
} 
*/

  String? the80KTo_100K;

  JobInfoModelDataSalaryRangeFilters({
    this.the80KTo_100K,
  });
  JobInfoModelDataSalaryRangeFilters.fromJson(Map<String, dynamic> json) {
    the80KTo_100K = json["80K_to_100K"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["80K_to_100K"] = the80KTo_100K;
    return data;
  }
}

class JobInfoModelData {
/*
{
  "id": 57769,
  "job_title": "Operations Manager | BPO",
  "job_location": "Homebased",
  "job_location_key": "homebased",
  "job_region": "Homebased",
  "job_country": "Philippines",
  "job_country_key": "ph",
  "job_type": "Full-time",
  "job_type_key": "full_time",
  "degree": "Bachelor",
  "degree_key": "bachelor",
  "xp_lvl": "3 - 5 years",
  "xp_lvl_key": "3_to_5_years",
  "salary_range_filters": [
    {
      "80K_to_100K": "80K - 100K"
    }
  ],
  "salary_range_from": 90000,
  "salary_range_to": 100000,
  "salary_expectation": "Login to view salary",
  "is_company_verify": false,
  "recruiter_id": 2275867,
  "status_key": "active",
  "external_apply_url": "null",
  "is_salary_hidden": false,
  "job_description": "Design and promote high visibility of key performance indicator (KPI) reports which monitor progress toward program goals for production- and supervisor-level staff.\nConduct a weekly one-on-one meeting/coaching with each direct report leader to:\nReview and discuss the progress of their team (People Analyzer)\nEnsure alignment of mutual expectations\nAssess and improve job satisfaction\nPerform root cause analysis and resolution of issues\nIdentify opportunities to recognize good performance\nOversee the selection of new hires and internal promotions through interviews and/or review of recorded interviews\nMonitor onboarding and offboarding practices to ensure they follow the company’s standard processes for such activities.\nAssess the efficacy of training efforts and provide feedback to the Learning and Development department to close gaps in knowledge and skill.\nConduct a weekly quality calibration meeting with each client for programs under management and own the resolution of findings identified.\nReview all disciplinary actions to ensure alignment with principles taught in the company’s leadership training program.\nHandle the resolution of client requests and escalations in a timely manner.\n",
  "job_description_html": "<ul><li>Design and promote high visibility of key performance indicator (KPI) reports which monitor progress toward program goals for production- and supervisor-level staff.</li><li>Conduct a weekly one-on-one meeting/coaching with each direct report leader to:</li></ul><ol><li class=\"ql-indent-1\">Review and discuss the progress of their team (People Analyzer)</li><li class=\"ql-indent-1\">Ensure alignment of mutual expectations</li><li class=\"ql-indent-1\">Assess and improve job satisfaction</li><li class=\"ql-indent-1\">Perform root cause analysis and resolution of issues</li><li class=\"ql-indent-1\">Identify opportunities to recognize good performance</li></ol><ul><li>Oversee the selection of new hires and internal promotions through interviews and/or review of recorded interviews</li><li>Monitor onboarding and offboarding practices to ensure they follow the company’s standard processes for such activities.</li><li>Assess the efficacy of training efforts and provide feedback to the Learning and Development department to close gaps in knowledge and skill.</li><li>Conduct a weekly quality calibration meeting with each client for programs under management and own the resolution of findings identified.</li><li>Review all disciplinary actions to ensure alignment with principles taught in the company’s leadership training program.</li><li>Handle the resolution of client requests and escalations in a timely manner.</li></ul>",
  "job_requirements": "Excellent English communication skills\nGraduate of any 4-year course\n4+ years of Leadership experience\n5+ years of BPO experience\n",
  "job_requirements_html": "<ul><li>Excellent English communication skills</li><li>Graduate of any 4-year course</li><li>4+ years of Leadership experience</li><li>5+ years of BPO experience</li></ul>",
  "job_skills": "Operations,English language,Leadership,Customer Service,Team Player,Acct Mgmt",
  "address": "15th floor Cyber Gamma Bldg., Ortigas Center, Pasig City",
  "full_address": "15th floor Cyber Gamma Bldg., Ortigas Center, Pasig City, Homebased, Philippines",
  "categories": [
    {
      "id": 1,
      "key": "customer-service",
      "value": "Customer Service",
      "is_approve": true,
      "created_at": "2021-07-19T14:30:26.000000Z",
      "updated_at": "2021-07-19T14:30:26.000000Z"
    }
  ],
  "benefits": [
    {
      "id": 9,
      "name": "Other Allowances"
    }
  ],
  "screening_questions": [
    {
      "question": "How long is your leadership role experience? "
    }
  ],
  "resume_forwarding_emails": [
    {
      "email": "danmar.olayres@clearsourcebpo.com"
    }
  ],
  "stickies_status": true,
  "stickies_expired_at": "2021-09-09 12:25:28",
  "boost_status": true,
  "no_of_applications": 0,
  "no_of_views": 0,
  "created_at": "2021-09-06T04:23:21.000000Z",
  "published_at": "2021-09-06 19:42:55",
  "expired_at": "2021-12-05T11:42:55.000000Z",
  "company_id": 25512,
  "company_name": "ClearSource BPO",
  "company_industry": "BPO",
  "company_logo": "https://assets.bossjob.com/companies/25512/logo/ak7nzkoHMzdldIdZ34yGsNIt2t9JPLxS4pAwiqhA.png",
  "company_size": "500 - 999",
  "company_website": "https://clearsourcebpo.com/",
  "recruiter_first_name": "Danmar ",
  "recruiter_last_name": "Olayres",
  "recruiter_avatar": "",
  "recruiter_last_active_at": "2021-09-06 02:11:20",
  "application_response_rate": 100,
  "application_response_time": "within a month",
  "report_to": "",
  "no_of_employee_range_id": "null",
  "no_of_employee_range": "null",
  "summary": "null",
  "requirements": "null"
} 
*/

  int? id;
  String? jobTitle;
  String? jobLocation;
  String? jobLocationKey;
  String? jobRegion;
  String? jobCountry;
  String? jobCountryKey;
  String? jobType;
  String? jobTypeKey;
  String? degree;
  String? degreeKey;
  String? xpLvl;
  String? xpLvlKey;
  List<JobInfoModelDataSalaryRangeFilters?>? salaryRangeFilters;
  int? salaryRangeFrom;
  int? salaryRangeTo;
  String? salaryExpectation;
  bool? isCompanyVerify;
  int? recruiterId;
  String? statusKey;
  String? externalApplyUrl;
  bool? isSalaryHidden;
  String? jobDescription;
  String? jobDescriptionHtml;
  String? jobRequirements;
  String? jobRequirementsHtml;
  String? jobSkills;
  String? address;
  String? fullAddress;
  List<JobInfoModelDataCategories?>? categories;
  List<JobInfoModelDataBenefits?>? benefits;
  List<JobInfoModelDataScreeningQuestions?>? screeningQuestions;
  List<JobInfoModelDataResumeForwardingEmails?>? resumeForwardingEmails;
  bool? stickiesStatus;
  String? stickiesExpiredAt;
  bool? boostStatus;
  int? noOfApplications;
  int? noOfViews;
  String? createdAt;
  String? publishedAt;
  String? expiredAt;
  int? companyId;
  String? companyName;
  String? companyIndustry;
  String? companyLogo;
  String? companySize;
  String? companyWebsite;
  String? recruiterFirstName;
  String? recruiterLastName;
  String? recruiterAvatar;
  String? recruiterLastActiveAt;
  int? applicationResponseRate;
  String? applicationResponseTime;
  String? reportTo;
  String? noOfEmployeeRangeId;
  String? noOfEmployeeRange;
  String? summary;
  String? requirements;

  JobInfoModelData({
    this.id,
    this.jobTitle,
    this.jobLocation,
    this.jobLocationKey,
    this.jobRegion,
    this.jobCountry,
    this.jobCountryKey,
    this.jobType,
    this.jobTypeKey,
    this.degree,
    this.degreeKey,
    this.xpLvl,
    this.xpLvlKey,
    this.salaryRangeFilters,
    this.salaryRangeFrom,
    this.salaryRangeTo,
    this.salaryExpectation,
    this.isCompanyVerify,
    this.recruiterId,
    this.statusKey,
    this.externalApplyUrl,
    this.isSalaryHidden,
    this.jobDescription,
    this.jobDescriptionHtml,
    this.jobRequirements,
    this.jobRequirementsHtml,
    this.jobSkills,
    this.address,
    this.fullAddress,
    this.categories,
    this.benefits,
    this.screeningQuestions,
    this.resumeForwardingEmails,
    this.stickiesStatus,
    this.stickiesExpiredAt,
    this.boostStatus,
    this.noOfApplications,
    this.noOfViews,
    this.createdAt,
    this.publishedAt,
    this.expiredAt,
    this.companyId,
    this.companyName,
    this.companyIndustry,
    this.companyLogo,
    this.companySize,
    this.companyWebsite,
    this.recruiterFirstName,
    this.recruiterLastName,
    this.recruiterAvatar,
    this.recruiterLastActiveAt,
    this.applicationResponseRate,
    this.applicationResponseTime,
    this.reportTo,
    this.noOfEmployeeRangeId,
    this.noOfEmployeeRange,
    this.summary,
    this.requirements,
  });
  JobInfoModelData.fromJson(Map<String, dynamic> json) {
    id = json["id"]?.toInt();
    jobTitle = json["job_title"]?.toString();
    jobLocation = json["job_location"]?.toString();
    jobLocationKey = json["job_location_key"]?.toString();
    jobRegion = json["job_region"]?.toString();
    jobCountry = json["job_country"]?.toString();
    jobCountryKey = json["job_country_key"]?.toString();
    jobType = json["job_type"]?.toString();
    jobTypeKey = json["job_type_key"]?.toString();
    degree = json["degree"]?.toString();
    degreeKey = json["degree_key"]?.toString();
    xpLvl = json["xp_lvl"]?.toString();
    xpLvlKey = json["xp_lvl_key"]?.toString();
    if (json["salary_range_filters"] != null) {
      final v = json["salary_range_filters"];
      final arr0 = <JobInfoModelDataSalaryRangeFilters>[];
      v.forEach((v) {
        arr0.add(JobInfoModelDataSalaryRangeFilters.fromJson(v));
      });
      salaryRangeFilters = arr0;
    }
    salaryRangeFrom = json["salary_range_from"]?.toInt();
    salaryRangeTo = json["salary_range_to"]?.toInt();
    salaryExpectation = json["salary_expectation"]?.toString();
    isCompanyVerify = json["is_company_verify"];
    recruiterId = json["recruiter_id"]?.toInt();
    statusKey = json["status_key"]?.toString();
    externalApplyUrl = json["external_apply_url"]?.toString();
    isSalaryHidden = json["is_salary_hidden"];
    jobDescription = json["job_description"]?.toString();
    jobDescriptionHtml = json["job_description_html"]?.toString();
    jobRequirements = json["job_requirements"]?.toString();
    jobRequirementsHtml = json["job_requirements_html"]?.toString();
    jobSkills = json["job_skills"]?.toString();
    address = json["address"]?.toString();
    fullAddress = json["full_address"]?.toString();
    if (json["categories"] != null) {
      final v = json["categories"];
      final arr0 = <JobInfoModelDataCategories>[];
      v.forEach((v) {
        arr0.add(JobInfoModelDataCategories.fromJson(v));
      });
      categories = arr0;
    }
    if (json["benefits"] != null) {
      final v = json["benefits"];
      final arr0 = <JobInfoModelDataBenefits>[];
      v.forEach((v) {
        arr0.add(JobInfoModelDataBenefits.fromJson(v));
      });
      benefits = arr0;
    }
    if (json["screening_questions"] != null) {
      final v = json["screening_questions"];
      final arr0 = <JobInfoModelDataScreeningQuestions>[];
      v.forEach((v) {
        arr0.add(JobInfoModelDataScreeningQuestions.fromJson(v));
      });
      screeningQuestions = arr0;
    }
    if (json["resume_forwarding_emails"] != null) {
      final v = json["resume_forwarding_emails"];
      final arr0 = <JobInfoModelDataResumeForwardingEmails>[];
      v.forEach((v) {
        arr0.add(JobInfoModelDataResumeForwardingEmails.fromJson(v));
      });
      resumeForwardingEmails = arr0;
    }
    stickiesStatus = json["stickies_status"];
    stickiesExpiredAt = json["stickies_expired_at"]?.toString();
    boostStatus = json["boost_status"];
    noOfApplications = json["no_of_applications"]?.toInt();
    noOfViews = json["no_of_views"]?.toInt();
    createdAt = json["created_at"]?.toString();
    publishedAt = json["published_at"]?.toString();
    expiredAt = json["expired_at"]?.toString();
    companyId = json["company_id"]?.toInt();
    companyName = json["company_name"]?.toString();
    companyIndustry = json["company_industry"]?.toString();
    companyLogo = json["company_logo"]?.toString();
    companySize = json["company_size"]?.toString();
    companyWebsite = json["company_website"]?.toString();
    recruiterFirstName = json["recruiter_first_name"]?.toString();
    recruiterLastName = json["recruiter_last_name"]?.toString();
    recruiterAvatar = json["recruiter_avatar"]?.toString();
    recruiterLastActiveAt = json["recruiter_last_active_at"]?.toString();
    applicationResponseRate = json["application_response_rate"]?.toInt();
    applicationResponseTime = json["application_response_time"]?.toString();
    reportTo = json["report_to"]?.toString();
    noOfEmployeeRangeId = json["no_of_employee_range_id"]?.toString();
    noOfEmployeeRange = json["no_of_employee_range"]?.toString();
    summary = json["summary"]?.toString();
    requirements = json["requirements"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["id"] = id;
    data["job_title"] = jobTitle;
    data["job_location"] = jobLocation;
    data["job_location_key"] = jobLocationKey;
    data["job_region"] = jobRegion;
    data["job_country"] = jobCountry;
    data["job_country_key"] = jobCountryKey;
    data["job_type"] = jobType;
    data["job_type_key"] = jobTypeKey;
    data["degree"] = degree;
    data["degree_key"] = degreeKey;
    data["xp_lvl"] = xpLvl;
    data["xp_lvl_key"] = xpLvlKey;
    if (salaryRangeFilters != null) {
      final v = salaryRangeFilters;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["salary_range_filters"] = arr0;
    }
    data["salary_range_from"] = salaryRangeFrom;
    data["salary_range_to"] = salaryRangeTo;
    data["salary_expectation"] = salaryExpectation;
    data["is_company_verify"] = isCompanyVerify;
    data["recruiter_id"] = recruiterId;
    data["status_key"] = statusKey;
    data["external_apply_url"] = externalApplyUrl;
    data["is_salary_hidden"] = isSalaryHidden;
    data["job_description"] = jobDescription;
    data["job_description_html"] = jobDescriptionHtml;
    data["job_requirements"] = jobRequirements;
    data["job_requirements_html"] = jobRequirementsHtml;
    data["job_skills"] = jobSkills;
    data["address"] = address;
    data["full_address"] = fullAddress;
    if (categories != null) {
      final v = categories;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["categories"] = arr0;
    }
    if (benefits != null) {
      final v = benefits;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["benefits"] = arr0;
    }
    if (screeningQuestions != null) {
      final v = screeningQuestions;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["screening_questions"] = arr0;
    }
    if (resumeForwardingEmails != null) {
      final v = resumeForwardingEmails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["resume_forwarding_emails"] = arr0;
    }
    data["stickies_status"] = stickiesStatus;
    data["stickies_expired_at"] = stickiesExpiredAt;
    data["boost_status"] = boostStatus;
    data["no_of_applications"] = noOfApplications;
    data["no_of_views"] = noOfViews;
    data["created_at"] = createdAt;
    data["published_at"] = publishedAt;
    data["expired_at"] = expiredAt;
    data["company_id"] = companyId;
    data["company_name"] = companyName;
    data["company_industry"] = companyIndustry;
    data["company_logo"] = companyLogo;
    data["company_size"] = companySize;
    data["company_website"] = companyWebsite;
    data["recruiter_first_name"] = recruiterFirstName;
    data["recruiter_last_name"] = recruiterLastName;
    data["recruiter_avatar"] = recruiterAvatar;
    data["recruiter_last_active_at"] = recruiterLastActiveAt;
    data["application_response_rate"] = applicationResponseRate;
    data["application_response_time"] = applicationResponseTime;
    data["report_to"] = reportTo;
    data["no_of_employee_range_id"] = noOfEmployeeRangeId;
    data["no_of_employee_range"] = noOfEmployeeRange;
    data["summary"] = summary;
    data["requirements"] = requirements;
    return data;
  }
}

class JobInfoModel {
/*
{
  "message": "OK",
  "data": {
    "id": 57769,
    "job_title": "Operations Manager | BPO",
    "job_location": "Homebased",
    "job_location_key": "homebased",
    "job_region": "Homebased",
    "job_country": "Philippines",
    "job_country_key": "ph",
    "job_type": "Full-time",
    "job_type_key": "full_time",
    "degree": "Bachelor",
    "degree_key": "bachelor",
    "xp_lvl": "3 - 5 years",
    "xp_lvl_key": "3_to_5_years",
    "salary_range_filters": [
      {
        "80K_to_100K": "80K - 100K"
      }
    ],
    "salary_range_from": 90000,
    "salary_range_to": 100000,
    "salary_expectation": "Login to view salary",
    "is_company_verify": false,
    "recruiter_id": 2275867,
    "status_key": "active",
    "external_apply_url": "null",
    "is_salary_hidden": false,
    "job_description": "Design and promote high visibility of key performance indicator (KPI) reports which monitor progress toward program goals for production- and supervisor-level staff.\nConduct a weekly one-on-one meeting/coaching with each direct report leader to:\nReview and discuss the progress of their team (People Analyzer)\nEnsure alignment of mutual expectations\nAssess and improve job satisfaction\nPerform root cause analysis and resolution of issues\nIdentify opportunities to recognize good performance\nOversee the selection of new hires and internal promotions through interviews and/or review of recorded interviews\nMonitor onboarding and offboarding practices to ensure they follow the company’s standard processes for such activities.\nAssess the efficacy of training efforts and provide feedback to the Learning and Development department to close gaps in knowledge and skill.\nConduct a weekly quality calibration meeting with each client for programs under management and own the resolution of findings identified.\nReview all disciplinary actions to ensure alignment with principles taught in the company’s leadership training program.\nHandle the resolution of client requests and escalations in a timely manner.\n",
    "job_description_html": "<ul><li>Design and promote high visibility of key performance indicator (KPI) reports which monitor progress toward program goals for production- and supervisor-level staff.</li><li>Conduct a weekly one-on-one meeting/coaching with each direct report leader to:</li></ul><ol><li class=\"ql-indent-1\">Review and discuss the progress of their team (People Analyzer)</li><li class=\"ql-indent-1\">Ensure alignment of mutual expectations</li><li class=\"ql-indent-1\">Assess and improve job satisfaction</li><li class=\"ql-indent-1\">Perform root cause analysis and resolution of issues</li><li class=\"ql-indent-1\">Identify opportunities to recognize good performance</li></ol><ul><li>Oversee the selection of new hires and internal promotions through interviews and/or review of recorded interviews</li><li>Monitor onboarding and offboarding practices to ensure they follow the company’s standard processes for such activities.</li><li>Assess the efficacy of training efforts and provide feedback to the Learning and Development department to close gaps in knowledge and skill.</li><li>Conduct a weekly quality calibration meeting with each client for programs under management and own the resolution of findings identified.</li><li>Review all disciplinary actions to ensure alignment with principles taught in the company’s leadership training program.</li><li>Handle the resolution of client requests and escalations in a timely manner.</li></ul>",
    "job_requirements": "Excellent English communication skills\nGraduate of any 4-year course\n4+ years of Leadership experience\n5+ years of BPO experience\n",
    "job_requirements_html": "<ul><li>Excellent English communication skills</li><li>Graduate of any 4-year course</li><li>4+ years of Leadership experience</li><li>5+ years of BPO experience</li></ul>",
    "job_skills": "Operations,English language,Leadership,Customer Service,Team Player,Acct Mgmt",
    "address": "15th floor Cyber Gamma Bldg., Ortigas Center, Pasig City",
    "full_address": "15th floor Cyber Gamma Bldg., Ortigas Center, Pasig City, Homebased, Philippines",
    "categories": [
      {
        "id": 1,
        "key": "customer-service",
        "value": "Customer Service",
        "is_approve": true,
        "created_at": "2021-07-19T14:30:26.000000Z",
        "updated_at": "2021-07-19T14:30:26.000000Z"
      }
    ],
    "benefits": [
      {
        "id": 9,
        "name": "Other Allowances"
      }
    ],
    "screening_questions": [
      {
        "question": "How long is your leadership role experience? "
      }
    ],
    "resume_forwarding_emails": [
      {
        "email": "danmar.olayres@clearsourcebpo.com"
      }
    ],
    "stickies_status": true,
    "stickies_expired_at": "2021-09-09 12:25:28",
    "boost_status": true,
    "no_of_applications": 0,
    "no_of_views": 0,
    "created_at": "2021-09-06T04:23:21.000000Z",
    "published_at": "2021-09-06 19:42:55",
    "expired_at": "2021-12-05T11:42:55.000000Z",
    "company_id": 25512,
    "company_name": "ClearSource BPO",
    "company_industry": "BPO",
    "company_logo": "https://assets.bossjob.com/companies/25512/logo/ak7nzkoHMzdldIdZ34yGsNIt2t9JPLxS4pAwiqhA.png",
    "company_size": "500 - 999",
    "company_website": "https://clearsourcebpo.com/",
    "recruiter_first_name": "Danmar ",
    "recruiter_last_name": "Olayres",
    "recruiter_avatar": "",
    "recruiter_last_active_at": "2021-09-06 02:11:20",
    "application_response_rate": 100,
    "application_response_time": "within a month",
    "report_to": "",
    "no_of_employee_range_id": "null",
    "no_of_employee_range": "null",
    "summary": "null",
    "requirements": "null"
  },
  "status_code": 200
} 
*/

  String? message;
  JobInfoModelData? data;
  int? statusCode;

  JobInfoModel({
    this.message,
    this.data,
    this.statusCode,
  });
  JobInfoModel.fromJson(Map<String, dynamic> json) {
    message = json["message"]?.toString();
    data =
        (json["data"] != null) ? JobInfoModelData.fromJson(json["data"]) : null;
    statusCode = json["status_code"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["message"] = message;
    if (data != null) {
      data["data"] = this.data!.toJson();
    }
    data["status_code"] = statusCode;
    return data;
  }
}
