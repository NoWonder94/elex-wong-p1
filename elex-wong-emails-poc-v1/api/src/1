import { format } from 'date-fns';
import spawnAsync from '@expo/spawn-async';

/**
 * Data Model Interfaces
 */
import { BaseItem, Item } from "./item.interface";
import {dbpool} from "../db";
import {utils} from "../common/utils";

/**
 * Service Methods
 */

const hotFix = ""

const convertChain = (chain:string)=>{
	let hotFix = "";
	if(chain == "0x1"){
		hotFix = "eth.emails.com"
	}else if(chain == "0x38"){
		hotFix = "bsc.emails.com"
	}else if(chain == "0x14"){
		hotFix = "esc.emails.com"
	}

	return hotFix;
}
export const find = async (address: string,chain?:string): Promise<any> => {
	if(!utils.isValidAddr(address)){
		return Promise.reject("Invalid address!")
	}
	const hotFix = convertChain(chain);
	if(!hotFix){
	    return Promise.reject("Unknown chain network!");
	}
	return new Promise((resolve, reject) => {
		dbpool.query(`SELECT * FROM mailbox where username='${address}@${hotFix}'`, function(err, rows, fields) {
			// Connection is automatically released when query resolves
			if(err){
				reject(err)
			}else{
				if(rows && rows.length >0){
					resolve(rows);
				}else{
					resolve(false)
				}
			}
		})
	})
};

export const create = async (newItem: Item): Promise<any> => {
	//doveadm pw -s 'ssha512' -p 'hu124124'
	let resultPromise = spawnAsync('doveadm', ['pw','-s','ssha512','-p',newItem.password]);
	let spawnedChildProcess = resultPromise.child;
	let {
		pid,
		stdout,
		stderr,
		status,
		signal,
	} = await resultPromise;

	console.log(stdout,"doveadm::");
	const passwordSHA512 = stdout;
	return new Promise((resolve, reject) => {
		const now = format(new Date(),"yyyy-MM-dd HH:mm:ss");
		const hotFix = convertChain(newItem.chain);
		if(!hotFix){
		    reject("Unknown chain network!");
		    return;
		}

		const email = `${newItem.address.toLowerCase()}@${hotFix}`;
		// dbpool.beginTransaction();
		dbpool.query(`INSERT INTO mailbox (username, password, name,storagebasedirectory,storagenode, maildir, quota, domain, active, passwordlastchange, created)  VALUES (?,?,?,?,?,?,?,?,?,?,?)`,
			     [email, passwordSHA512,newItem.address,
				     '/var/vmail','vmail1', `${hotFix}/t/e/s/app-${format(new Date,"yyyy.MM.dd.HH.mm.ss")}/`,
				     '1024', hotFix, '1', now,now],
				     function(err, rows, fields) {
					     // Connection is automatically released when query resolves
					     if(err){
						     reject(err)
					     }else{

						     dbpool.query(`INSERT INTO forwardings (address, forwarding, domain, dest_domain, is_forwarding)  VALUES (?,?,?,?,?)`,
								  [email, email,hotFix, hotFix, 1],
								  function(err, rows, fields) {

									  // Connection is automatically released when query resolves
									  if(err){
										  reject(err)
									  }else{
										  resolve(true)
									  }
								  })
					     }
				     })
				     // dbpool.commit()
	})
};
